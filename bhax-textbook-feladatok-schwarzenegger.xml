<chapter xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xi="http://www.w3.org/2001/XInclude" version="5.0" xml:lang="hu">
    <info>
        <title>Helló, Schwarzenegger!</title>
        <keywordset>
            <keyword/>
        </keywordset>
    </info>
    <section>
        <title>Szoftmax Py MNIST</title>
        <para>
            Python
        </para>
        <para>
            Megoldás videó: <link xlink:href="https://youtu.be/j7f9SkJR3oc">https://youtu.be/j7f9SkJR3oc</link>      
        </para>
        <para>
            Megoldás forrása: <link xlink:href="https://github.com/tensorflow/tensorflow/releases/tag/v0.9.0">https://github.com/tensorflow/tensorflow/releases/tag/v0.9.0</link> (/tensorflow-0.9.0/tensorflow/examples/tutorials/mnist/), <link xlink:href="https://progpater.blog.hu/2016/11/13/hello_samu_a_tensorflow-bol">https://progpater.blog.hu/2016/11/13/hello_samu_a_tensorflow-bol</link>  
        </para>
        <para>
            <link xlink:href='../../src/Schwarzenegger/Softmax/softmax.py'>
                <filename>softmax.py</filename>
            </link>
        </para>
        <para>
            Tanulságok, tapasztalatok, magyarázat...
        </para>
        <caution>
            <title>
                FIGYELEM
            </title>
            <para>
                A futtáshoz telepíteni kell a Tensorflow megfelelő csomagjait és
                a Python3 fejlesztői csomagokat is. Kövesd az általád használt Linux disztribúció
                telepítési útmutatóját hozzá!
            </para>
        </caution>
        <para>
            Jelenleg(2019.04.21.) így telepíthetjük egy Ubuntu disztrón:
        </para>
        <screen>
            <![CDATA[
sudo apt install python3-dev python3-pip
sudo pip3 install -U virtualenv  # system-wide install
virtualenv --system-site-packages -p python3 ./venv
source ./venv/bin/activate  # sh, bash, ksh, or zsh
pip install --upgrade pip
pip install --upgrade tensorflow
#ellenőrizzük, hogy helyesen települt-e
python -c "import tensorflow as tf; tf.enable_eager_execution(); print(tf.reduce_sum(tf.random_normal([1000, 1000])))"
]]>
        </screen>
        <para>
            Az MNIST egy viszonylag nagy <link xlink:href='http://yann.lecun.com/exdb/mnist/'>adatbázis</link> ami tanitóanyagokat biztosít
            , például, olyan hálózatok(szoftveres) tanítására amiknek feladata,
            hogy képelemzési technikákkal és háttértudások(tanult minták
            alapján) segítségével elemezni tudjanak bemeneti képeket.
            Az adatbázis kézírott arab számokat tartalmaz.
        </para>
        <para>
            A Tensorflow egy nyílt forrású matematikai könyvtár amit a gépi tanulásban,
            például neurális hálózatoknál, használják. Mivel ezeknek a témaköröknek
            rengeteg erőforrásra van szükséges, hogy érdemi munkát hajtsanak végre a
            Tensorflow képes egyszerre több CPU-n és GPU-n futni(például CUDA segítségével).
        </para>
        <para>
            Tensorflow vagy hasonló könyvtár nélkül is implementálhatunk különféle
            gépi tanuláshoz kapcsolódó algoritmust akármilyen programozási nyelvben.
            Azonban Tensorflow már eleve optimalizált és tesztelt algoritmusokat
            biztosít a számításainkhoz, saját kóddal <emphasis>from scratch</emphasis>
            nem 100%, hogy elérjük a teljesítményüket. Egyedül a neurális hálózat
            megírása marad ránk.
        </para>
        <para>
            Az adatbázist felhasználva 60.000 képpel fogjuk kioktatni a hálózatunkat
            és 10.000-rel megpróbáljuk megközelíteni, hogy mennyire pontos volt.
        </para>
        <programlisting language='python'>
            <![CDATA[
from __future__ import absolute_import
from __future__ import division
from __future__ import print_function

import argparse

# Import data
from tensorflow.examples.tutorials.mnist import input_data

import tensorflow as tf
old_v = tf.logging.get_verbosity()
tf.logging.set_verbosity(tf.logging.ERROR)

import matplotlib.pyplot


FLAGS = None

def main(_):
  mnist = input_data.read_data_sets(FLAGS.data_dir, one_hot=True)

  # Create the model
  x = tf.placeholder(tf.float32, [None, 784])
  W = tf.Variable(tf.zeros([784, 10]))
  b = tf.Variable(tf.zeros([10]))
  y = tf.matmul(x, W) + b
]]>
    </programlisting>
    <para>
        Az adatok (MNIST adatbázis) behívása és eltárolása után inicializáljuk
        lépésekben a Tensorflow könyvtárat.
    </para>
    <para>
        Egy neurális hálózat rétegekből épül fel, lásd Perceptron feladat,
        ezeket a rétegeket be kell állítanunk annak megfelelően ami el akarunk
        érni a neurális hálózat működése során. A réteg a bemeneti adatokból
        különféle információkat olvasnak ki.
    </para>
    <para>
        Létrehozunk egy tenzort <varname>x</varname>, ebbe fogjuk küldeni az értékeket,
        beállítjuk, hogy 784 pixelt tartalmazó képeket fog kapni. Ezeken felül létrehozzuk
        az <varname>y</varname> értékeit adó függvényhez még szükséges <varname>W</varname>
        (súly) és <varname>b</varname> (bias) változókat. Az y értékei 0-1. Ezzel
        a softmax modelt hoztuk létre.
    </para>
    <programlisting language='python'><![CDATA[
  # Define loss and optimizer
  y_ = tf.placeholder(tf.float32, [None, 10])

  # The raw formulation of cross-entropy,
  #
  #   tf.reduce_mean(-tf.reduce_sum(y_ * tf.log(tf.nn.softmax(y)),
  #                                 reduction_indices=[1]))
  #
  # can be numerically unstable.
  #
  # So here we use tf.nn.softmax_cross_entropy_with_logits on the raw
  # outputs of 'y', and then average across the batch.
  cross_entropy = tf.reduce_mean(tf.nn.softmax_cross_entropy_with_logits(labels = y_, logits = y))
  train_step = tf.train.GradientDescentOptimizer(0.5).minimize(cross_entropy)
]]>
    </programlisting>
    <para>
        A <varname>cross_entropy</varname> sorban a <emphasis>cost</emphasis>
        függvényt állítjuk be, ez arra szolgál, hogy megtudjuk mennyi a különbség
        az eredeti érték és a becsült érték között, ezt az értékét akarjuk minimálizálni.
    </para>
    <para>
        Lépésekben történik a tanítás és egy beépített <function>GradientDescentOptimizer</function>
        függvényt használunk fel tanításra. Ez a függvény úgy működik, hogy
        van egy kezdeti érték amit frissítget egészen addig amíg a <emphasis>cost</emphasis>
        függvény el nem ér egy minimumot, például a legmagasabb pontossági értéket.
        Ebből látjuk, hogy iteráció függő lesz ez a kalkuláció.
    </para>
    <programlisting language='python'><![CDATA[     
  sess = tf.InteractiveSession()
  # Train
  tf.initialize_all_variables().run(session=sess)
  print("-- A halozat tanitasa")  
  for i in range(1000):
    batch_xs, batch_ys = mnist.train.next_batch(100)
    sess.run(train_step, feed_dict={x: batch_xs, y_: batch_ys})
    if i % 100 == 0:
      print(i/10, "%")
  print("----------------------------------------------------------")
   ]]>
    </programlisting>
    <para>
        Inicializáljuk a sessionünket, feldaraboljuk az adatot <varname>batch</varname>-ekre
        tehát részekre és futtatjuk a modellünket. Közben a jelenlegi pontosságot is
        kiiratjuk.
    </para>
    <programlisting language='python'><![CDATA[     
  # Test trained model
  print("-- A halozat tesztelese")  
  correct_prediction = tf.equal(tf.argmax(y, 1), tf.argmax(y_, 1))
  accuracy = tf.reduce_mean(tf.cast(correct_prediction, tf.float32))  
  print("-- Pontossag: ", sess.run(accuracy, feed_dict={x: mnist.test.images,
                                      y_: mnist.test.labels}))
  print("----------------------------------------------------------")
  
  print("-- A MNIST 42. tesztkepenek felismerese, mutatom a szamot, a tovabblepeshez csukd be az ablakat")
  
  img = mnist.test.images[42]
  image = img

  matplotlib.pyplot.imshow(image.reshape(28, 28), cmap=matplotlib.pyplot.cm.binary)
  matplotlib.pyplot.savefig("4.png")  
  matplotlib.pyplot.show()

  classification = sess.run(tf.argmax(y, 1), feed_dict={x: [image]})

  print("-- Ezt a halozat ennek ismeri fel: ", classification[0])
  print("----------------------------------------------------------")

  print("-- A MNIST 11. tesztkepenek felismerese, mutatom a szamot, a tovabblepeshez csukd be az ablakat")

  img = mnist.test.images[11]
  image = img
  matplotlib.pyplot.imshow(image.reshape(28,28), cmap=matplotlib.pyplot.cm.binary)
  matplotlib.pyplot.savefig("8.png")  
  matplotlib.pyplot.show()

  classification = sess.run(tf.argmax(y, 1), feed_dict={x: [image]})

  print("-- Ezt a halozat ennek ismeri fel: ", classification[0])
  print("----------------------------------------------------------")

if __name__ == '__main__':
  parser = argparse.ArgumentParser()
  parser.add_argument('--data_dir', type=str, default='/tmp/tensorflow/mnist/input_data',
                      help='Directory for storing input data')
  FLAGS = parser.parse_args()
  tf.app.run()
]]>
        </programlisting>
        <para>
            Az elkészült hálózatunkat teszteljük az MNIST adatbázis néhány képével,
            az output alapján sikeresen működik és működtettük a Tensorflow projektünket.
        </para>
        <para>
            A kiválaszott képet megjelenítjük külön ablakban is, hogy összetudjuk
            mi is hasonlítani a képen látható objektumot az eredmény szerinti objektummal.
        </para>
        <mediaobject>
            <imageobject>
                <imagedata fileref="../../src/Schwarzenegger/Softmax/Media/1.png" scale='40'/>
            </imageobject>
            <caption>
                <para>Bemeneti képen a 4-s számjegy</para>
            </caption>
        </mediaobject>
        <mediaobject>
            <imageobject>
                <imagedata fileref="../../src/Schwarzenegger/Softmax/Media/2.png" scale='40'/>
            </imageobject>
            <caption>
                <para>A hálózat szerint tényleg 4-s van rajta!</para>
            </caption>
        </mediaobject>
        <mediaobject>
            <imageobject>
                <imagedata fileref="../../src/Schwarzenegger/Softmax/Media/3.png" scale='40'/>
            </imageobject>
            <caption>
                <para>Bemeneti képen a 6-s számjegy</para>
            </caption>
        </mediaobject>
        <mediaobject>
            <imageobject>
                <imagedata fileref="../../src/Schwarzenegger/Softmax/Media/4.png" scale='40'/>
            </imageobject>
            <caption>
                <para>A hálózat szerint tényleg 6-s van rajta!</para>
            </caption>
        </mediaobject>
    </section>        
    <section>
        <title>Mély MNIST</title>
        <caution>
            <title>
                PASSZOLÁS 1 - UDPROG SMINST FOR HUMANS feladat alapján
            </title>
            <para>
                Az UDPROG SMINST for humans bejegyzés feladatát teljesítettem, elértem a level 10-s
                szintet a felmérésben, így felhasználom egyik passzolási lehetőségemet
                ennél a feladatnál.
            </para>
        </caution>
        <mediaobject>
            <imageobject>
                <imagedata fileref="../../src/Schwarzenegger/Pass/level10.jpg" scale='40'/>
            </imageobject>
            <caption>
                <para>Ez a 3. kép amit beküldtem, először elértem a 6., 9. majd a 10-s szintet.</para>
            </caption>
        </mediaobject>
        <para>
            Python            
        </para>
        <para>
            Megoldás videó:
        </para>
        <para>
            Megoldás forrása:                
        </para>
        <para>
            Tanulságok, tapasztalatok, magyarázat...
        </para>
    </section>                          
    <section>
        <title>Minecraft-MALMÖ</title>
        <caution>
            <title>
                PASSZOLÁS 2 - UDPROG SMINST FOR HUMANS feladat alapján
            </title>
            <para>
                Az UDPROG SMINST for humans bejegyzés feladatát teljesítettem, elértem a level 10-s
                szintet a felmérésben, így felhasználom az utolsó passzolási lehetőségemet
                ennél a feladatnál.
            </para>
        </caution>
        <mediaobject>
            <imageobject>
                <imagedata fileref="../../src/Schwarzenegger/Pass/level10.jpg" scale='40'/>
            </imageobject>
            <caption>
                <para>Ez a 3. kép amit beküldtem, először elértem a 6., 9. majd a 10-s szintet.</para>
            </caption>
        </mediaobject>
        <para>
        </para>
        <para>
            Megoldás videó: <link xlink:href="https://youtu.be/bAPSu3Rndi8">https://youtu.be/bAPSu3Rndi8</link>      
        </para>
        <para>
            Megoldás forrása:                
        </para>
        <para>
            Tanulságok, tapasztalatok, magyarázat...
        </para>
        
    </section>        
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              
</chapter>            
