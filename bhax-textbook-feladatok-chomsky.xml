<chapter xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xi="http://www.w3.org/2001/XInclude" version="5.0" xml:lang="hu">
    <info>
        <title>Helló, Chomsky!</title>
        <keywordset>
            <keyword/>
        </keywordset>
    </info>
    <section>
        <title>Decimálisból unárisba átváltó Turing gép</title>
        <para>
	 A harmadik fejezet első feladatában mint már a címben is látható, Decimálisból unárisba átváltó Turing gépet kell létrehoznunk,
	 állapotátmenet gráfjával megadva.
        </para>
	<para>
            Megoldás forrása: <link xlink:href="https://github.com/glszKK/Chomsky/tree/master">https://github.com/glszKK/Chomsky/tree/master</link>
        </para>
	    
	<programlisting language="c"><![CDATA[
	#include <stdio.h>
	int main()
	{
	  int x;
	  printf("Tizes szamrendszerbeli szam:");
	  scanf("%d",&x);
	  printf("\nUnaris alakja:");
	  for(int i = 0; i < x; i++)
	    {
	      printf("/");
	    }
	  printf("\n");
	  return 0;
	}
	]]>
        </programlisting>
        <para>
		
		
		
           Decimálisból unáris (egyes számrendszer) számrendszerbe való átváltás során csak a 10-es számrenderben megadott számú tetszőleges karaktert kell leírni.
	   A fenti példában ez egy for ciklussal van megoldva de bármilyen más megoldás is jó ha az megfelelő számú tetszőleges karakter ad vissza eredményül.
        </para>
    </section>        
        
    <section>
        <title>Az a<superscript>n</superscript>b<superscript>n</superscript>c<superscript>n</superscript> nyelv nem környezetfüggetlen</title>
        <para>
            Mutass be legalább két környezetfüggő generatív grammatikát, amely ezt a nyelvet generálja!
        </para>
  	<para>
            Megoldás forrása: <link xlink:href="https://github.com/glszKK/Chomsky/tree/master">https://github.com/glszKK/Chomsky/tree/master</link>
        </para>
        <para>

		
		
        </para>
    </section>        
                
    <section>
        <title>Hivatkozási nyelv</title>
        <para>
            A <citation>KERNIGHANRITCHIE</citation> könyv C referencia-kézikönyv/Utasítások melléklete alapján definiáld 
            BNF-ben a C utasítás fogalmát!
            Majd mutass be olyan kódcsipeteket, amelyek adott szabvánnyal nem fordulnak (például C89), mással (például C99) igen.
        </para>
	<para>
            Megoldás forrása: <link xlink:href="https://github.com/glszKK/Chomsky/tree/master">https://github.com/glszKK/Chomsky/tree/master</link>
        </para>
	<programlisting><![CDATA[
	<nem terminális> ::= konkatenációja terminálisoknak, nem terminálisoknak, 
	illetve {iteráció}, [opcionális], alter|natíva
	<egész szám> ::= <előjel><szám>
	<előjel> ::= [-|+]
	<szám> ::= <számjegy>{<számjegy>}
	<számjegy> ::= 0|1|2|3|4|5|6|7|8|9]]>
	</programlisting>
	<programlisting><![CDATA[
	<címkézett_utasítás> ::= <azonosító> | case | default
	<kifejezésutasítás> ::= <kifejezés>
	<deklarációs_lista> ::= <deklaráció>
	<utasítás_lista> ::= <utasítás>
	<összetett_utasítás> ::= <deklarációs_lista> | <utasítás_lista>
	<kiválasztó_utasítás> ::= if | if else | switch
	<iterációs_utasítás> ::= while | do while | for
	<vezérlésátadó_ utasítás> ::= goto | continue | break | return]]>
        </programlisting>
        <para>
            Példák a szabványok közötti különbségekre:  
        </para>
	<programlisting language="c"><![CDATA[
	int main(){
	//int a;
		return 0;
	}
	]]>
        </programlisting>
        <para>
            A fenti példa C89-es szabvánnyal nem fordul le mí C99-es szabvánnyal le fordul mert abban már megengedett a //-el való kommentelés, míg a C89-es szabványban csak a /* és a */ voltak kommentet jelző szimbólumok. Szóval a fenti példa C89-es szabványban így nézne ki:
        </para>
	<programlisting language="c"><![CDATA[
	int main(){
	/*int a;*/
		return 0;
	}
	]]>
        </programlisting>
	<para>
	Ez mind a 2 szabványban le fog fordulni.
	</para>
    </section>                     

    <section>
        <title>Saját lexikális elemző</title>
        <para>
            Írj olyan programot, ami számolja a bemenetén megjelenő valós számokat! 
            Nem elfogadható olyan megoldás, amely maga olvassa betűnként a bemenetet, 
            a feladat lényege, hogy lexert használjunk, azaz óriások vállán álljunk és ne kispályázzunk!
        </para>
	<para>
            Megoldás forrása: <link xlink:href="https://github.com/glszKK/Chomsky/tree/master">https://github.com/glszKK/Chomsky/tree/master</link>
        </para>
        <para>
         
		
		
		
		
		
		
		
        </para>
    </section>                     

    <section>
        <title>l33t.l</title>
        <para>
            Lexelj össze egy l33t ciphert!
        </para>
	<para>
            Megoldás forrása: <link xlink:href="https://github.com/glszKK/Chomsky/tree/master">https://github.com/glszKK/Chomsky/tree/master</link>
        </para>
        <para>
         
		
		
		
		
		

        </para>
    </section>                     


    <section>
        <title>A források olvasása</title>
        <para>
            Hogyan olvasod, hogyan értelmezed természetes nyelven az alábbi kódcsipeteket? Például
            <programlisting><![CDATA[if(signal(SIGINT, jelkezelo)==SIG_IGN)
    signal(SIGINT, SIG_IGN);]]></programlisting>
            Ha a SIGINT jel kezelése figyelmen kívül volt hagyva, akkor ezen túl is legyen
            figyelmen kívül hagyva, ha nem volt figyelmen kívül hagyva, akkor a jelkezelo függvény
            kezelje. (Miután a <command>man 7 signal</command> lapon megismertem a SIGINT jelet, a
            <command>man 2 signal</command> lapon pedig a használt rendszerhívást.)
        </para>

        <caution>
            <title>Bugok</title>
            <para>
                Vigyázz, sok csipet kerülendő, mert bugokat visz a kódba! Melyek ezek és miért? 
                Ha nem megy ránézésre, elkapja valamelyiket esetleg a splint vagy a frama?
            </para>
        </caution>
	<para>
            Megoldás forrása: <link xlink:href="https://github.com/glszKK/Chomsky/tree/master">https://github.com/glszKK/Chomsky/tree/master</link>
        </para>
            
        <orderedlist numeration="lowerroman">
            <listitem>                                    
                <programlisting><![CDATA[if(signal(SIGINT, SIG_IGN)!=SIG_IGN)
    signal(SIGINT, jelkezelo);]]></programlisting>
		<para>
			Ha a SIGINT nem volt figyelmen kívül hagyva akkor a jelkezelő kezelje.
			Ha figyelmen kívül volt hagyva tövábbra is maradjon úgy.
		</para>
            </listitem>
	
            <listitem>                                    
                <programlisting><![CDATA[for(i=0; i<5; ++i)]]></programlisting>  
		<para>
		A függvény 5x fog lefutni, viszont figyelni kell arra hogy az i változót még a for ciklus ellőtt deklarálni kell, és ha az i-t ++i-vel növeltük akkor lehetőleg 		továbbra is úgy használjuk hogy könnyebben érthető maradjon a kód.
	
		</para>          
            </listitem>
	
            <listitem>
                <programlisting><![CDATA[for(i=0; i<5; i++)]]></programlisting>  
		<para>
			Itt is ugyanaz igaz mint az előzőnél. A cuklus 5x le fog futni ha a ciklusváltozót deklarátuk a ciklus előtt.
		</para>          
            </listitem>
	
            <listitem>
                <programlisting><![CDATA[for(i=0; i<5; tomb[i] = i++)]]></programlisting>  
		<para>
			Nyelvtani hiba nincs ha már létrehoztuk a tomb nevű tömböt és az i-t. Le is fog fordulni, viszont az eredmény bugos lesz.
		</para>          
            </listitem>
	
            <listitem>
                <programlisting><![CDATA[for(i=0; i<n && (*d++ = *s++); ++i)]]></programlisting>
		<para>
			A kód hibamentes ha már létrehoztuk a látható változókat és mutatókat.
		</para>            
            </listitem>
	
            <listitem>
                <programlisting><![CDATA[printf("%d %d", f(a, ++a), f(++a, a));]]></programlisting>  
		<para>
			A printf függvény ki fog írni 2 decimális számot ha már megvan az f függvény, az a változó, és ha az a változó megfelelő típusú az f függvényhez.
			Arra kell figyelni hogy ha az f függvény visszatérési értéke nem int akkor a kiírt értékek nem biztos hogy pontosak lesznek.
		</para>          
            </listitem>
	
            <listitem>
                <programlisting><![CDATA[printf("%d %d", f(a), a);]]></programlisting>  
		<para>
			A printf ki fogja írni az f függvény visszatérési értékét a-ra decimális alakban, és a értékét decimális alakban. Itt is ugyanarra kell figyelni mint 				az előbb. Nyelvtani hiba nincs a kódrészletben.
		</para>          
            </listitem>
	
            <listitem>
                <programlisting><![CDATA[printf("%d %d", f(&a), a);]]></programlisting>  
		<para>
		A kiiratás megtörténik viszont az f függvény most az a változó memória címévél fog dolgozni nem az a értékével ha ezt akarjuk akkor nincs semmi gond.
		</para>          
            </listitem>	
        </orderedlist>
        <para>
	    
		
		
		
        </para>

    </section>                     

    <section>
        <title>Logikus</title>
        <para>
            Hogyan olvasod természetes nyelven az alábbi Ar nyelvű formulákat?
        </para>
        <programlisting language="tex"><![CDATA[$(\forall x \exists y ((x<y)\wedge(y \text{ prím})))$]]></programlisting>
	<para>
		Végtelen sok prím van.
	</para>
	<programlisting language="tex"><![CDATA[$(\forall x \exists y ((x<y)\wedge(y \text{ prím})\wedge(SSy \text{ prím})))$]]></programlisting> 
	<para>
		Végtelen sok ikerprím van.
	</para>
	<programlisting language="tex"><![CDATA[$(\exists y \forall x (x \text{ prím}) \supset (x<y)) $]]></programlisting> 
	<para>
		Véges sok prím van.
	</para>
	<programlisting language="tex"><![CDATA[$(\exists y \forall x (y<x) \supset \neg (x \text{ prím}))$]]></programlisting>
	<para>
		Véges sok prím van.
	</para>
        
        <para>
            Megoldás forrása: <link xlink:href="https://gitlab.com/nbatfai/bhax/blob/master/attention_raising/MatLog_LaTeX">https://gitlab.com/nbatfai/bhax/blob/master/attention_raising/MatLog_LaTeX</link>
        </para>

        <para>
            Megoldás videó: <link xlink:href="https://youtu.be/ZexiPy3ZxsA">https://youtu.be/ZexiPy3ZxsA</link>, <link xlink:href="https://youtu.be/AJSXOQFF_wk">https://youtu.be/AJSXOQFF_wk</link>
        </para>

    </section>                                                                                                                                                                            
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    
    <section>
        <title>Deklaráció</title>
            
        <para>
            Vezesd be egy programba (forduljon le) a következőket: 
        </para>
	<para>
            Megoldás forrása: <link xlink:href="https://github.com/glszKK/Chomsky/tree/master">https://github.com/glszKK/Chomsky/tree/master</link>
        </para>

        <itemizedlist>
            <listitem>
                <para>egész</para>
		<programlisting><![CDATA[int a;]]></programlisting>                         
            </listitem>
            <listitem>
                <para>egészre mutató mutató</para>
		<programlisting><![CDATA[int *b;]]></programlisting>                        
            </listitem>
            <listitem>
                <para>egész referenciája</para>
		<programlisting><![CDATA[int &r;]]></programlisting>                        
            </listitem>
            <listitem>
                <para>egészek tömbje</para>
		<programlisting><![CDATA[int t[5];]]></programlisting>                        
            </listitem>
            <listitem>
                <para>egészek tömbjének referenciája (nem az első elemé)</para>
		<programlisting><![CDATA[int (&tr)[5] = t;]]></programlisting>                        
            </listitem>
            <listitem>
                <para>egészre mutató mutatók tömbje</para>
		<programlisting><![CDATA[int *d[5];]]></programlisting>                        
            </listitem>
            <listitem>
                <para>egészre mutató mutatót visszaadó függvény</para>
		<programlisting><![CDATA[int *h();]]></programlisting>                        
            </listitem>
            <listitem>
                <para>egészre mutató mutatót visszaadó függvényre mutató mutató</para>
		<programlisting><![CDATA[int *(*h) ();]]></programlisting>                        
            </listitem>
            <listitem>
                <para>egészet visszaadó és két egészet kapó függvényre mutató mutatót visszaadó, egészet kapó függvény</para>
		<programlisting><![CDATA[int (*v (int c)) (int a, int b);]]></programlisting>
            </listitem>            
            <listitem>
                <para>függvénymutató egy egészet visszaadó és két egészet kapó függvényre mutató mutatót visszaadó, egészet kapó függvényre</para>
		<programlisting><![CDATA[int (*(*z) (int)) (int, int);]]></programlisting>                        
            </listitem>            
        </itemizedlist>            

       <para>
            Mit vezetnek be a programba a következő nevek?
        </para>

        <itemizedlist>
            <listitem>
                <programlisting><![CDATA[int a;]]></programlisting>   
		<para>
			Egy egész típusú változót.
		</para>         
            </listitem>

            <listitem>
                <programlisting><![CDATA[int *b = &a;]]></programlisting>
		<para>
			Egy egész típusú mutatót ami a-ra mutat.
		</para>            
            </listitem>

            <listitem>
                <programlisting><![CDATA[int &r = a;]]></programlisting>   
		<para>
			a változónak a referenciája.
		</para>         
            </listitem>

            <listitem>
                <programlisting><![CDATA[int c[5];]]></programlisting>  
		<para>
			Egy 5 elemű egész típusú tömböt.
		</para>          
            </listitem>

            <listitem>
                <programlisting><![CDATA[int (&tr)[5] = c;]]></programlisting>    
		<para>
			Egészek tömbjének referenciáját.
		</para>        
            </listitem>
            <listitem>
                <programlisting><![CDATA[int *d[5];]]></programlisting>  
		<para>
			5 elemű int-re mutató mutatók tömbjét.
		</para>          
            </listitem>

            <listitem>
                <programlisting><![CDATA[int *h ();]]></programlisting> 
		<para>
			Egy függvényt ami int-re mutató mutatót ad vissza.
		</para>           
            </listitem>

            <listitem>
                <programlisting><![CDATA[int *(*l) ();]]></programlisting> 
		<para>
			Egy int-re mutató mutatót visszaadó függvényre mutató mutatót.(pl. az előző függvényre)
		</para>           
            </listitem>

            <listitem>
                <programlisting><![CDATA[int (*v (int c)) (int a, int b)]]></programlisting>
		<para>
			int-et visszaadó, két intet kapó függvényre mutató mutatót visszaadó egészet kapó függvényt.
		</para>            
            </listitem> 
           
            <listitem>
                <programlisting><![CDATA[int (*(*z) (int)) (int, int);]]></programlisting>  
		<para>
			int-et visszaadó, két intet kapó függvényre mutató mutatót visszaadó egészet kapó függvényre mutató mutatót.
		</para>          
            </listitem>            
        </itemizedlist>
    </section>                     


</chapter>  
